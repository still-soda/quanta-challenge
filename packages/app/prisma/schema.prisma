generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id        String   @id @default(cuid())
  name      String?
  imageId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastLogin DateTime @default(now())

  avatar             Image?               @relation(fields: [imageId], references: [id])
  auths              Auth[]
  WebAuthnCredential WebAuthnCredential[]

  @@map("users")
}

// 认证提供商枚举
enum AuthProvider {
  QQ
  EMAIL
}

// 认证表
model Auth {
  id           String       @id @default(cuid())
  userId       String
  provider     AuthProvider
  providerId   String
  accessToken  String?
  refreshToken String?
  email        String?
  password     String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
  @@map("auths")
}

// WebAuthn 凭证表
model WebAuthnCredential {
  id        String   @id @default(cuid())
  userId    String
  publicKey String
  counter   Int      @default(0)
  lastUsed  DateTime @default(now())
  transport String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, publicKey])
  @@map("webauthn_credentials")
}

// 图片表
model Image {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())
  User      User[]

  @@map("images")
}
